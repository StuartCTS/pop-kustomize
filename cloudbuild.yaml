# Overview: build and create a release via Google Cloud Deploy for GKE
# NOTE: currently requires SCM triggering due to dependency on the COMMIT_SHA variable
steps:
   # TODO add policy validation steps
  - id: 'Prepare config'
    # This step builds the final manifests for the app
    # using kustomize and the configuration files
    # available in the repository.
    name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
    entrypoint: '/bin/sh'
    args: ['-c', 'mkdir hydrated-manifests && kubectl kustomize config/prod > hydrated-manifests/prod.yaml']
  - id: 'Download policies'
    # This step fetches the policies from the Anthos Config Management repository
    # and consolidates every resource in a single file.
    name: 'gcr.io/kpt-dev/kpt'
    entrypoint: '/bin/sh'
    args: ['-c', 'kpt pkg get https://github.com/GoogleCloudPlatform/anthos-config-management-samples.git/ci-app/acm-repo/cluster@1.0.0 constraints
                  && kpt fn source constraints/ hydrated-manifests/ > hydrated-manifests/kpt-manifests.yaml']
  - id: 'Validate against policies'
    # This step validates that all resources comply with all policies.
    name: 'gcr.io/config-management-release/policy-controller-validate'
    args: ['--input', 'hydrated-manifests/kpt-manifests.yaml']
  # Build and tag using commit sha
  - name: 'gcr.io/cloud-builders/docker'
    args: ['build', '.', '-t', 'us-central1-docker.pkg.dev/$PROJECT_ID/pop-stats/pop-stats:${COMMIT_SHA}', '-f', 'Dockerfile']
    dir: 'app'
  # Run unit tests
  - name: 'us-central1-docker.pkg.dev/$PROJECT_ID/pop-stats/pop-stats:${COMMIT_SHA}'
    entrypoint: python
    args: ["unit_tests.py"]
    dir: 'app'
  # Push the container image to Artifact Registry
  - name: 'gcr.io/cloud-builders/docker'
    args: ['push', 'us-central1-docker.pkg.dev/$PROJECT_ID/pop-stats/pop-stats:${COMMIT_SHA}']
  # Create release in Google Cloud Deploy
  - name: gcr.io/google.com/cloudsdktool/cloud-sdk
    entrypoint: gcloud
    args: 
      [
        "deploy", "releases", "create", "rel-${SHORT_SHA}",
        "--delivery-pipeline", "pop-stats-pipeline",
        "--region", "us-central1",
        "--annotations", "commitId=${REVISION_ID}",
        "--images", "pop-stats=us-central1-docker.pkg.dev/$PROJECT_ID/pop-stats/pop-stats:${COMMIT_SHA}"
      ]
    
